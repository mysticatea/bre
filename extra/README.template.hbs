# bre

[![npm version](https://img.shields.io/npm/v/bre.svg)](https://www.npmjs.com/package/bre)
[![Downloads/month](https://img.shields.io/npm/dm/bre.svg)](http://www.npmtrends.com/bre)
[![Build Status](https://travis-ci.org/mysticatea/bre.svg?branch=master)](https://travis-ci.org/mysticatea/bre)
[![Coverage Status](https://coveralls.io/repos/github/mysticatea/bre/badge.svg?branch=master)](https://coveralls.io/github/mysticatea/bre?branch=master)
[![Dependency Status](https://david-dm.org/mysticatea/bre.svg)](https://david-dm.org/mysticatea/bre)

A Binary-Object Mapper for JavaScript.

```js
const bre = require("bre")

// Define a Record Type.
const TcpHeader = bre.defineObjectRecord("TcpHeader", [
    {type: "uint16", name: "srcPort"},
    {type: "uint16", name: "dstPort"},
    {type: "uint32", name: "seqNo"},
    {type: "uint32", name: "ackNo"},
    {type: "bit4", name: "dataOffset"},
    {skip: 6},
    {type: "bit1", name: "urgCode"},
    {type: "bit1", name: "ackCode"},
    {type: "bit1", name: "pshCode"},
    {type: "bit1", name: "rstCode"},
    {type: "bit1", name: "synCode"},
    {type: "bit1", name: "finCode"},
    {type: "uint16", name: "windowSize"},
    {type: "uint16", name: "checksum"},
    {type: "uint16", name: "urgentPonter"},
])

// Connect to a Buffer
const header = TcpHeader.view(a_buffer, 0)

// Read and Write the Buffer
console.log(header.srcPort, "â†’", header.dstPort, "ðŸš€")
header.seqNo += 1
header.ackNo += 1
header.ackCode = 1
```

`bre`'s record object is just the wrapper of an [ArrayBuffer] object.

- The read of a record object's property is the read of the wrapped buffer.
- The write of a record object's property is the write of the wrapped buffer.

## Installation

```bash
$ npm install --save bre
```

- Requires Node.js `>=4.0.0`

## Usage

{{#module name="bre"}}
{{>body~}}
{{/module}}

## API Reference

```js
const bre = require("bre")
```

- [bre.defineObjectRecord(className, fields)](https://mysticatea.github.io/bre/api/module-bre.html#.defineObjectRecord)
- [bre.defineArrayRecord(type, length)](https://mysticatea.github.io/bre/api/module-bre.html#.defineArrayRecord)
- [bre.getTextEncoder()](https://mysticatea.github.io/bre/api/module-bre.html#.getTextEncoder)
- [bre.setTextEncoder(value)](https://mysticatea.github.io/bre/api/module-bre.html#.setTextEncoder)
- [bre.BinaryRecord](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#)
    - [bre.BinaryRecord.bitLength(record)](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#.bitLength)
    - [bre.BinaryRecord.byteLength(record)](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#.byteLength)
    - [bre.BinaryRecord.keys(record)](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#.keys)
    - [bre.BinaryRecord.values(record)](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#.values)
    - [bre.BinaryRecord.entries(record)](https://mysticatea.github.io/bre/api/module-bre.BinaryRecord.html#.entries)

## Changelog

- https://github.com/mysticatea/bre/releases

## Contributing

Thank you for contributing!

- Getting code:

  ```bash
  $ git clone https://github.com/mysticatea/bre.git
  $ cd bre
  $ npm install
  ```

- Testing:

  ```bash
  $ npm run watch
  ```

[ArrayBuffer]: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer
